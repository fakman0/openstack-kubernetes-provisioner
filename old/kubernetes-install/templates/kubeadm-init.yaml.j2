apiVersion: kubeadm.k8s.io/v1beta4
kind: InitConfiguration
bootstrapTokens:
  - description: "kubeadm bootstrap token"
    ttl: "{{ token_ttl }}"
    groups:
      - system:bootstrappers:kubeadm:default-node-token
    usages:
      - signing
      - authentication
localAPIEndpoint:
  advertiseAddress: "{{ api_server_advertise_address }}"
  bindPort: 6443
nodeRegistration:
  name: "{{ inventory_hostname }}"
  taints: {{ node_taints | to_json }}
  kubeletExtraArgs:
    - name: "node-labels"
      value: "{{ node_labels | to_json }}"
  criSocket: unix:///var/run/containerd/containerd.sock
  imagePullPolicy: IfNotPresent
  imagePullSerial: true
timeouts:
  controlPlaneComponentHealthCheck: 4m0s
  discovery: 5m0s
  etcdAPICall: 2m0s
  kubeletHealthCheck: 4m0s
  kubernetesAPICall: 1m0s
  tlsBootstrap: 5m0s
  upgradeManifests: 5m0s
---
apiVersion: kubeadm.k8s.io/v1beta4
kind: ClusterConfiguration
kubernetesVersion: v{{ kubernetes_version }}
controlPlaneEndpoint: "{{ control_plane_endpoint }}:{{ control_plane_endpoint_port }}"
networking:
  podSubnet: "{{ kubernetes_pod_network.cidr }}"
  dnsDomain: cluster.local
  serviceSubnet: 10.96.0.0/12
apiServer:
  certSANs:
{% for host in groups['masters'] %}
    - "{{ host }}"
    - "{{ hostvars[host]['ansible_host'] }}"
{% endfor %}
    - "kubernetes"
    - "kubernetes.default"
    - "kubernetes.default.svc"
clusterName: kubernetes
certificatesDir: /etc/kubernetes/pki
imageRepository: registry.k8s.io
caCertificateValidityPeriod: 87600h0m0s
certificateValidityPeriod: 8760h0m0s
encryptionAlgorithm: RSA-2048
etcd:
  local:
    dataDir: /var/lib/etcd
proxy: {}
scheduler: {} 