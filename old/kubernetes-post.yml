---
# Kubernetes Post-Installation Playbook
- name: Kubernetes post-installation tasks
  hosts: masters
  become: true
  gather_facts: true
  tasks:
    - name: Verify all nodes are Ready
      ansible.builtin.command: kubectl get nodes
      register: nodes_status
      changed_when: false
      until: "'NotReady' not in nodes_status.stdout"
      retries: 10
      delay: 30
      run_once: true
      
    - name: Display node status
      ansible.builtin.debug:
        var: nodes_status.stdout_lines
      run_once: true
    
    - name: Check if CoreDNS is running
      ansible.builtin.command: kubectl get pods -n kube-system -l k8s-app=kube-dns
      register: coredns_status
      changed_when: false
      until: "'Running' in coredns_status.stdout"
      retries: 10
      delay: 30
      run_once: true
    
    - name: Display CoreDNS status
      ansible.builtin.debug:
        var: coredns_status.stdout_lines
      run_once: true
    
    - name: Create kube-system namespace (if it doesn't exist)
      ansible.builtin.command: kubectl create namespace kube-system
      register: create_namespace
      changed_when: create_namespace.rc == 0
      failed_when: create_namespace.rc != 0 and "AlreadyExists" not in create_namespace.stderr
      run_once: true
    
    - name: Check if metrics-server is installed
      ansible.builtin.command: kubectl get deployment metrics-server -n kube-system
      register: metrics_server_check
      changed_when: false
      failed_when: false
      run_once: true
    
    - name: Install metrics-server
      ansible.builtin.command: kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml
      register: metrics_server_install
      changed_when: metrics_server_install.rc == 0
      when: metrics_server_check.rc != 0
      run_once: true
    
    - name: Create backup directory
      ansible.builtin.file:
        path: "{{ playbook_dir }}/../backup"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true
      become: false
      
    - name: Create backup of kubeconfig
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/../backup/kubeconfig-{{ ansible_date_time.date }}.conf"
        remote_src: true
        mode: '0600'
      run_once: true
      
    - name: Fetch kubeconfig file to Ansible controller
      ansible.builtin.fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/../kubeconfig"
        flat: true
      run_once: true 